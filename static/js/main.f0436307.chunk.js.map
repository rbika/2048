{"version":3,"sources":["components/board/Board.module.css","components/end-game-panel/EndGamePanel.module.css","pages/game/Game.module.css","redux/actions/action-types.js","constants.js","redux/reducers/game.js","utils/grid.js","redux/reducers/tiles.js","redux/reducers/score.js","redux/reducers/index.js","redux/actions/game.js","redux/actions/score.js","redux/actions/tiles.js","redux/sagas.js","redux/store.js","components/header/Header.js","components/header/index.js","components/board/Board.js","components/board/index.js","components/end-game-panel/EndGamePanel.js","components/end-game-panel/index.js","assets/github.svg","pages/game/Game.js","pages/game/index.js","index.js","components/header/Header.module.css"],"names":["module","exports","NEW_GAME","END_GAME","MOVE_TILES","MOVE_TILES_END","GAME_STATES","IN_PROGRESS","VICTORY","GAME_OVER","IN_PROGRESS_AFTER_VICTORY","DIRECTIONS","UP","LEFT","DOWN","RIGHT","ARROWS","38","37","40","39","initialState","gameState","gameReducer","state","action","type","actions","payload","VECTOR","row","col","TILE_ORIGINS","generateEmptyGrid","gridSize","grid","i","Array","fill","push","isValidMove","nextPos","tileValue","isInsideRow","length","isInsideCol","nextCell","emptyCell","sameValueCell","value","unmergedCell","mergeWithTile","moveTiles","direction","newGrid","vector","gridChanged","j","tile","movedTile","newMerged","newRandom","hasAvailableMoves","flatGrid","flat","some","cell","result","forEach","generateTile","origin","id","uuid","getRandomEmptyCell","emptyCells","getEmptyCells","Math","floor","random","mergeTiles","map","gridRow","hasVictoryTile","filter","calculateMoveScore","reduce","score","tilesMoving","addRandomTile","gridUtils","randomValue","tilesReducer","currentScore","bestScore","scoreReducer","savedBestScore","localStorage","getItem","parseInt","newScore","setItem","combineReducers","game","tiles","newGame","endGame","keepPlaying","updateScore","moveTilesEnd","moveTilesSaga","moveTilesEndSaga","rootSaga","sleep","ms","Promise","res","setTimeout","task","put","takeEvery","select","max","all","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","compose","applyMiddleware","run","Header","props","onNewGameClick","className","styles","container","titleContainer","title","subTitle","gameInfo","scoresContainer","scoreContainer","scoreLabel","scoreValue","buttonsContainer","newGameBtn","onClick","HeaderContainer","dispatch","useDispatch","useSelector","handleNewGameClick","useCallback","BoardGrid","cells","GRID_SIZE","key","boardGridCell","boardGrid","Tiles","tilesContainer","positionStyles","transform","classes","classNames","newRandomTile","newMergedTile","tileContainer","style","Board","boardContainer","BoardContainer","array","sort","tile1","tile2","useEffect","window","addEventListener","handleKeyPress","removeEventListener","e","keyCode","GameOverPanel","endGamePanel","panelBtn","VictoryPanel","onKeepPlayingClick","EndGamePanel","content","EndGamePanelContainer","handleKeepPlayingClick","_extends","Object","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref","svgRef","x","y","width","height","viewBox","enableBackground","xmlSpace","ref","ForwardRef","forwardRef","Game","showEndGamePanel","PLAYING","positionRelative","howToPlayText","boldText","href","viewOnGithubLink","githubLogo","GameContainer","onSwiped","dir","toUpperCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0436307.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"boardContainer\":\"Board_boardContainer__1LEFg\",\"boardGrid\":\"Board_boardGrid__30AAE\",\"boardGridCell\":\"Board_boardGridCell__2cENT\",\"tilesContainer\":\"Board_tilesContainer__3TIBn\",\"tileContainer\":\"Board_tileContainer__3YcLx\",\"tile\":\"Board_tile__36kz5\",\"newRandomTile\":\"Board_newRandomTile__3aOcI\",\"newRandomTileAnimation\":\"Board_newRandomTileAnimation__1eu4J\",\"newMergedTile\":\"Board_newMergedTile__2fYCj\",\"newMergedTileAnimation\":\"Board_newMergedTileAnimation__1FEAj\",\"tile-2\":\"Board_tile-2__1868c\",\"tile-4\":\"Board_tile-4__2ZMie\",\"tile-8\":\"Board_tile-8__TQ_WY\",\"tile-16\":\"Board_tile-16__h7mTZ\",\"tile-32\":\"Board_tile-32__3Ge3d\",\"tile-64\":\"Board_tile-64__1QBuo\",\"tile-128\":\"Board_tile-128__fVeou\",\"tile-256\":\"Board_tile-256__1HYOa\",\"tile-512\":\"Board_tile-512__1YoSF\",\"tile-1024\":\"Board_tile-1024__3qOp-\",\"tile-2048\":\"Board_tile-2048__3LhJo\",\"tile-4096\":\"Board_tile-4096__3irdB\",\"tile-8192\":\"Board_tile-8192__273NZ\",\"tile-16384\":\"Board_tile-16384__1GhCe\",\"tile-32768\":\"Board_tile-32768__39-EQ\",\"tile-65536\":\"Board_tile-65536__YuCUh\",\"tile-131072\":\"Board_tile-131072__3ScEQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EndGamePanel_container__F2q-c\",\"endGamePanel\":\"EndGamePanel_endGamePanel__1vMAp\",\"fadeInAnimation\":\"EndGamePanel_fadeInAnimation__3GGIs\",\"panelBtn\":\"EndGamePanel_panelBtn__PTD2G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Game_container__39SqM\",\"howToPlayText\":\"Game_howToPlayText__6SN9W\",\"viewOnGithubLink\":\"Game_viewOnGithubLink__2drxN\",\"githubLogo\":\"Game_githubLogo__1gF9j\",\"positionRelative\":\"Game_positionRelative__29WxI\",\"boldText\":\"Game_boldText__1PbJY\"};","export const NEW_GAME = '2048/NEW_GAME';\nexport const END_GAME = '2048/END_GAME';\nexport const KEEP_PLAYING = '2048/KEEP_PLAYING';\n\nexport const UPDATE_SCORE = '2048/UPDATE_SCORE';\nexport const UPDATE_BEST_SCORE = '2048/UPDATE_BEST_SCORE';\n\nexport const MOVE_TILES = '2048/MOVE_TILES';\nexport const MOVE_TILES_END = '2048/MOVE_TILES_END';\n","// Tile needed to win the game\nexport const VICTORY_TILE = 2048;\n\n// Game states\nexport const GAME_STATES = {\n  IN_PROGRESS: 'IN_PROGRESS',\n  VICTORY: 'VICTORY',\n  GAME_OVER: 'GAME_OVER',\n  IN_PROGRESS_AFTER_VICTORY: 'IN_PROGRESS_AFTER_VICTORY',\n};\n\n// Board grid size\nexport const GRID_SIZE = 4;\n\n// Directions\nexport const DIRECTIONS = {\n  UP: 'UP',\n  LEFT: 'LEFT',\n  DOWN: 'DOWN',\n  RIGHT: 'RIGHT',\n};\n\n// Keyboard arrows codes\nexport const ARROWS = {\n  38: DIRECTIONS.UP,\n  37: DIRECTIONS.LEFT,\n  40: DIRECTIONS.DOWN,\n  39: DIRECTIONS.RIGHT,\n};\n","import * as actions from '../actions/action-types';\nimport { GAME_STATES } from '../../constants';\n\nconst initialState = {\n  gameState: GAME_STATES.IN_PROGRESS,\n};\n\nconst gameReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.NEW_GAME: {\n      return { ...state, gameState: GAME_STATES.IN_PROGRESS };\n    }\n    case actions.KEEP_PLAYING: {\n      return { ...state, gameState: GAME_STATES.IN_PROGRESS_AFTER_VICTORY };\n    }\n    case actions.END_GAME: {\n      return { ...state, gameState: action.payload.gameState };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default gameReducer;\n","import uuid from 'uuid/v4';\n\nimport { DIRECTIONS, VICTORY_TILE } from '../constants';\n\n// Movement vector direction\nconst VECTOR = {\n  UP: { row: -1, col: 0 },\n  DOWN: { row: 1, col: 0 },\n  LEFT: { row: 0, col: -1 },\n  RIGHT: { row: 0, col: 1 },\n};\n\n// Actions that can generate a new tile\nexport const TILE_ORIGINS = {\n  MERGE: 'MERGE',\n  MOVE: 'MOVE',\n};\n\n/**\n * Generates a grid with empty cells\n *\n * @param {number} gridSize\n * @returns {number[][]}\n */\nexport const generateEmptyGrid = (gridSize) => {\n  const grid = [];\n\n  for (let i = 0; i < gridSize; i += 1) {\n    const row = Array(gridSize).fill(null);\n    grid.push(row);\n  }\n\n  return grid;\n};\n\n/**\n * Checks if the tile can be moved to the specified position\n *\n * @param {{row: number, col: number}} nextPos Coords of new position\n * @param {number[][]} grid Grid with the moved tiles\n * @param {string} tileValue Value of the tile being moved\n * @returns {number[][]}\n */\nexport const isValidMove = (nextPos, grid, tileValue) => {\n  const isInsideRow = nextPos.row >= 0 && nextPos.row < grid.length;\n  const isInsideCol = nextPos.col >= 0 && nextPos.col < grid.length;\n  const isInsideGrid = isInsideRow && isInsideCol;\n\n  if (!isInsideGrid) {\n    return false;\n  }\n\n  const nextCell = grid[nextPos.row][nextPos.col];\n  const emptyCell = nextCell === null;\n  const sameValueCell = nextCell && nextCell.value === tileValue;\n  const unmergedCell = nextCell && !nextCell.mergeWithTile;\n\n  return emptyCell || (sameValueCell && unmergedCell);\n};\n\n/**\n * Returns a grid with moved tiles\n *\n * @param {number[][]} grid\n * @param {string} direction\n * @returns {{newGrid: number[][], gridChanged: boolean}}\n */\nexport const moveTiles = (grid, direction) => {\n  const gridSize = grid.length;\n  const newGrid = generateEmptyGrid(gridSize);\n  const vector = VECTOR[direction];\n  let gridChanged = false;\n\n  for (let i = 0; i < gridSize; i += 1) {\n    for (let j = 0; j < gridSize; j += 1) {\n      let row = i;\n      let col = j;\n\n      // Reverse row iterate tiles from bottom to top\n      if (direction === DIRECTIONS.DOWN) row = gridSize - i - 1;\n\n      // Reverse col iterate tiles from right to left\n      if (direction === DIRECTIONS.RIGHT) col = gridSize - j - 1;\n\n      const tile = grid[row][col];\n\n      if (tile !== null) {\n        const movedTile = { ...tile };\n        const nextPos = {\n          row: tile.row + vector.row,\n          col: tile.col + vector.col,\n        };\n\n        movedTile.newMerged = false;\n        movedTile.newRandom = false;\n\n        while (isValidMove(nextPos, newGrid, movedTile.value)) {\n          movedTile.row = nextPos.row;\n          movedTile.col = nextPos.col;\n\n          nextPos.row += vector.row;\n          nextPos.col += vector.col;\n\n          if (movedTile.row !== tile.row || movedTile.col !== tile.col) {\n            gridChanged = true;\n          }\n        }\n\n        if (newGrid[movedTile.row][movedTile.col] !== null) {\n          newGrid[movedTile.row][movedTile.col].mergeWithTile = movedTile;\n        } else {\n          newGrid[movedTile.row][movedTile.col] = movedTile;\n        }\n      }\n    }\n  }\n  return { newGrid, gridChanged };\n};\n\n/**\n * Checks if there are available moves in the grid\n *\n * @param {number[][]} grid\n * @returns {boolean}\n */\nexport const hasAvailableMoves = (grid) => {\n  const flatGrid = grid.flat();\n  const gridSize = grid.length;\n\n  // Checks if there are any empty cell\n  if (flatGrid.some((cell) => cell === null)) {\n    return true;\n  }\n\n  // Checks if there are adjacent cells with the same value\n  let result = false;\n  flatGrid.forEach((tile) => {\n    const { row, col, value } = tile;\n\n    if (row + 1 < gridSize && grid[row + 1][col].value === value) {\n      result = true;\n    }\n\n    if (col + 1 < gridSize && grid[row][col + 1].value === value) {\n      result = true;\n    }\n  });\n\n  return result;\n};\n\n/**\n * Creates a tile object\n *\n * @param {number} row\n * @param {number} col\n * @param {number} value\n * @param {string} origin\n * @returns {Object}\n */\nexport const generateTile = (row, col, value, origin) => {\n  const newMerged = origin === TILE_ORIGINS.MERGE;\n  const newRandom = origin === TILE_ORIGINS.MOVE;\n\n  return {\n    id: uuid(),\n    value,\n    row,\n    col,\n    newRandom,\n    newMerged,\n    mergeWithTile: null,\n  };\n};\n\n/**\n * Creates a tile object with random value (2 or 4) and random position\n *\n * @param {number[][]} grid\n * @returns {Object}\n */\nexport const generateRandomTile = (grid) => {\n  const randomValue = Math.random() > 0.9 ? 4 : 2;\n  const { row, col } = getRandomEmptyCell(grid);\n  return generateTile(row, col, randomValue, TILE_ORIGINS.MOVE);\n};\n\n/**\n * Gets the coordinates of all empty cells in the grid\n *\n * @param {number[][]} grid\n * @returns {{row: number, col: number}[]}\n */\nexport const getEmptyCells = (grid) => {\n  const emptyCells = [];\n\n  grid.forEach((row, i) => {\n    row.forEach((cell, j) => {\n      if (!cell) {\n        emptyCells.push({ row: i, col: j });\n      }\n    });\n  });\n  return emptyCells;\n};\n\n/**\n * Gets the coordinates of a empty random cell in the grid\n *\n * @param {number[][]} grid\n * @returns {{row: number, col: number}}\n */\nexport const getRandomEmptyCell = (grid) => {\n  const emptyCells = getEmptyCells(grid);\n  return emptyCells[Math.floor(Math.random() * emptyCells.length)];\n};\n\n/**\n * Returns a grid with the new tile added\n *\n * @param {number[][]} grid\n * @param {Object} tile\n * @returns {number[][]}\n */\nexport const addTile = (grid, tile) => {\n  const updatedGrid = grid.map((row, i) => {\n    if (i !== tile.row) {\n      return row;\n    }\n    return row.map((col, j) => {\n      if (j !== tile.col) {\n        return col;\n      }\n      return tile;\n    });\n  });\n\n  return updatedGrid;\n};\n\n/**\n * Returns a grid with the new merged tiles\n *\n * @param {number[][]} grid\n * @returns {number[][]}\n */\nexport const mergeTiles = (grid) => {\n  const updatedGrid = grid.map((gridRow) => gridRow.map((tile) => {\n    if (tile && tile.mergeWithTile) {\n      const { row, col, value } = tile;\n      return generateTile(row, col, value * 2, TILE_ORIGINS.MERGE);\n    }\n    return tile;\n  }));\n\n  return updatedGrid;\n};\n\n/**\n * Checks if the victory tile is present in the grid\n *\n * @param {number[][]} grid\n * @returns {boolean}\n */\nexport const hasVictoryTile = (grid) => grid\n  .flat()\n  .filter((cell) => cell !== null)\n  .some((cell) => cell.value === VICTORY_TILE);\n\n/**\n * Calculates the score of the last move\n *\n * @param {number[][]} grid\n * @returns {number}\n */\nexport const calculateMoveScore = (grid) => {\n  const tiles = grid.flat().filter((cell) => cell !== null);\n  const reducer = (score, tile) => (tile.newMerged ? score + tile.value : score);\n  return tiles.reduce(reducer, 0);\n};\n","import * as actions from '../actions/action-types';\nimport { GRID_SIZE } from '../../constants';\nimport * as gridUtils from '../../utils/grid';\n\nconst initialState = {\n  grid: [],\n  tilesMoving: false,\n};\n\nconst addRandomTile = (grid) => {\n  const tile = gridUtils.generateRandomTile(grid);\n  return gridUtils.addTile(grid, tile);\n};\n\nconst tilesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.NEW_GAME: {\n      let grid;\n      grid = gridUtils.generateEmptyGrid(GRID_SIZE);\n      grid = addRandomTile(grid);\n      grid = addRandomTile(grid);\n      return { ...state, grid };\n    }\n    case actions.MOVE_TILES: {\n      const { newGrid, gridChanged } = gridUtils.moveTiles(state.grid, action.payload);\n      if (!gridChanged) {\n        return state;\n      }\n      return { ...state, tilesMoving: true, grid: newGrid };\n    }\n    case actions.MOVE_TILES_END: {\n      let grid = gridUtils.mergeTiles(state.grid);\n\n      if (grid.flat().some((value) => value === null)) {\n        grid = addRandomTile(grid);\n      }\n\n      return { ...state, tilesMoving: false, grid };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tilesReducer;\n","import * as actions from '../actions/action-types';\n\nconst initialState = {\n  currentScore: 0,\n  bestScore: 0,\n};\n\nconst scoreReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.NEW_GAME: {\n      const savedBestScore = localStorage.getItem('bestScore');\n      const bestScore = savedBestScore ? parseInt(savedBestScore, 10) : 0;\n      return { ...state, bestScore, currentScore: 0 };\n    }\n    case actions.UPDATE_SCORE: {\n      const newScore = state.currentScore + action.payload;\n      return { ...state, currentScore: newScore };\n    }\n    case actions.END_GAME: {\n      localStorage.setItem('bestScore', action.payload.bestScore);\n      return { ...state, bestScore: action.payload.bestScore };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default scoreReducer;\n","import { combineReducers } from 'redux';\n\nimport gameReducer from './game';\nimport tilesReducer from './tiles';\nimport scoreReducer from './score';\n\nexport default combineReducers({\n  game: gameReducer,\n  tiles: tilesReducer,\n  score: scoreReducer,\n});\n","import * as actions from './action-types';\n\n/**\n * Starts a new game\n */\nexport const newGame = () => ({\n  type: actions.NEW_GAME,\n});\n\n/**\n * Ends the game\n */\nexport const endGame = (payload) => ({\n  type: actions.NEW_GAME,\n  payload,\n});\n\n/**\n * Allows player to keep playing after victory\n */\nexport const keepPlaying = () => ({\n  type: actions.KEEP_PLAYING,\n});\n","import * as actions from './action-types';\n\n/**\n * Increments the current score\n *\n * @param {number} value value to be incremented\n */\nexport const updateScore = (value) => ({\n  type: actions.UPDATE_SCORE,\n  payload: value,\n});\n","import * as actions from './action-types';\n\n/**\n * Moves all tiles to a given direction\n *\n * @param {String} direction UP, DOWN, LEFT or RIGHT\n */\nexport const moveTiles = (direction) => ({\n  type: actions.MOVE_TILES,\n  payload: direction,\n});\n\n/**\n * Merges the tiles in the same cell\n */\nexport const moveTilesEnd = () => ({\n  type: actions.MOVE_TILES_END,\n});\n","import {\n  put, takeEvery, all, select,\n} from 'redux-saga/effects';\n\nimport { endGame } from './actions/game';\nimport * as actions from './actions/action-types';\nimport * as gridUtils from '../utils/grid';\nimport { GAME_STATES } from '../constants';\nimport { updateScore } from './actions/score';\nimport { moveTilesEnd } from './actions/tiles';\n\nconst sleep = (ms) => new Promise((res) => setTimeout(res, ms));\n\nfunction* moveTilesSaga() {\n  function* task() {\n    yield sleep(150); // Move animation time\n    yield put(moveTilesEnd());\n  }\n  yield takeEvery(actions.MOVE_TILES, task);\n}\n\nfunction* moveTilesEndSaga() {\n  function* task() {\n    const grid = yield select((state) => state.tiles.grid);\n    const score = gridUtils.calculateMoveScore(grid);\n    yield put(updateScore(score));\n\n    const gameState = yield select((state) => state.game.gameState);\n    const { currentScore, bestScore } = yield select((state) => state.score);\n\n    if (gameState !== GAME_STATES.IN_PROGRESS_AFTER_VICTORY) {\n      if (gridUtils.hasVictoryTile(grid)) {\n        yield put(endGame({\n          gameState: GAME_STATES.VICTORY,\n          bestScore: Math.max(currentScore, bestScore),\n        }));\n      }\n    }\n\n    if (!gridUtils.hasAvailableMoves(grid)) {\n      yield put(endGame({\n        gameState: GAME_STATES.GAME_OVER,\n        bestScore: Math.max(currentScore, bestScore),\n      }));\n    }\n  }\n  yield takeEvery(actions.MOVE_TILES_END, task);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    moveTilesSaga(),\n    moveTilesEndSaga(),\n  ]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(sagaMiddleware),\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  ),\n);\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './Header.module.css';\n\nconst propTypes = {\n  score: PropTypes.number.isRequired,\n  bestScore: PropTypes.number.isRequired,\n  onNewGameClick: PropTypes.func.isRequired,\n};\n\nfunction Header(props) {\n  const { score, bestScore, onNewGameClick } = props;\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.titleContainer}>\n        <h1 className={styles.title}>2048</h1>\n        <h2 className={styles.subTitle}>Join the numbers and get to the 2048 tile!</h2>\n      </div>\n\n      <div className={styles.gameInfo}>\n        <div className={styles.scoresContainer}>\n          <div className={styles.scoreContainer}>\n            <div className={styles.scoreLabel}>Score</div>\n            <div className={styles.scoreValue}>{score}</div>\n          </div>\n\n          <div className={styles.scoreContainer}>\n            <div className={styles.scoreLabel}>Best</div>\n            <div className={styles.scoreValue}>{bestScore}</div>\n          </div>\n        </div>\n\n        <div className={styles.buttonsContainer}>\n          <button type=\"button\" className={styles.newGameBtn} onClick={onNewGameClick}>\n            New Game\n          </button>\n          {/* <button className={styles.undoBtn} onClick={onNewGameClick}>\n            Undo\n          </button> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nHeader.propTypes = propTypes;\nexport default Header;\n","import React, { useCallback } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { newGame } from '../../redux/actions/game';\nimport Header from './Header';\n\nfunction HeaderContainer() {\n  const dispatch = useDispatch();\n  const { currentScore, bestScore } = useSelector((state) => state.score);\n\n  const handleNewGameClick = useCallback(() => {\n    dispatch(newGame());\n  }, [dispatch]);\n\n  return <Header score={currentScore} bestScore={bestScore} onNewGameClick={handleNewGameClick} />;\n}\n\nexport default HeaderContainer;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { GRID_SIZE } from '../../constants';\nimport styles from './Board.module.css';\n\nconst propTypes = {\n  tiles: PropTypes.arrayOf(PropTypes.shape({\n    grid: PropTypes.array,\n    tilesMoving: PropTypes.bool,\n  })).isRequired,\n};\n\nconst BoardGrid = () => {\n  const cells = [];\n\n  for (let i = 0; i < GRID_SIZE * GRID_SIZE; i += 1) {\n    cells.push(<div key={i} className={styles.boardGridCell} />);\n  }\n  return <div className={styles.boardGrid}>{cells}</div>;\n};\n\nconst Tiles = (props) => {\n  const { tiles } = props;\n\n  return (\n    <div className={styles.tilesContainer}>\n      {tiles.map((tile) => {\n        const positionStyles = {\n          transform: `translate(${tile.col * (75 + 10)}px, ${tile.row * (75 + 10)}px)`,\n        };\n\n        const classes = classNames(styles.tile, {\n          [styles.newRandomTile]: tile.newRandom,\n          [styles.newMergedTile]: tile.newMerged,\n          [styles[`tile-${tile.value}`]]: true,\n        });\n\n        return (\n          <div key={tile.id} className={styles.tileContainer} style={positionStyles}>\n            <div className={classes}>{tile.value}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nTiles.propTypes = propTypes;\n\nfunction Board(props) {\n  const { tiles } = props;\n\n  return (\n    <div className={styles.boardContainer}>\n      <BoardGrid />\n      <Tiles tiles={tiles} />\n    </div>\n  );\n}\n\nBoard.propTypes = propTypes;\nexport default Board;\n","import React, { useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { moveTiles } from '../../redux/actions/tiles';\nimport { ARROWS } from '../../constants';\nimport Board from './Board';\n\nconst BoardContainer = () => {\n  const dispatch = useDispatch();\n  const tiles = useSelector((state) => {\n    const array = [];\n    state.tiles.grid.flat().forEach((tile) => {\n      if (tile) {\n        array.push(tile);\n\n        if (tile.mergeWithTile) {\n          array.push(tile.mergeWithTile);\n        }\n      }\n    });\n\n    return array.sort((tile1, tile2) => (tile1.id > tile2.id ? 1 : -1));\n  });\n\n  // Add keypress event listener\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyPress);\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n    };\n  });\n\n  const handleKeyPress = (e) => {\n    const direction = ARROWS[e.keyCode];\n\n    if (direction) {\n      dispatch(moveTiles(direction));\n    }\n  };\n\n  return <Board tiles={tiles} />;\n};\n\nexport default BoardContainer;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { GAME_STATES } from '../../constants';\nimport styles from './EndGamePanel.module.css';\n\nconst propTypes = {\n  gameState: PropTypes.string.isRequired,\n  onNewGameClick: PropTypes.func.isRequired,\n  onKeepPlayingClick: PropTypes.func.isRequired,\n};\n\nconst GameOverPanel = (props) => {\n  const { onNewGameClick } = props;\n\n  return (\n    <div className={styles.endGamePanel}>\n      <h1>GAME OVER!</h1>\n      <button type=\"button\" className={styles.panelBtn} onClick={onNewGameClick}>\n          Try Again\n      </button>\n    </div>\n  );\n};\nGameOverPanel.propTypes = {\n  onNewGameClick: PropTypes.func.isRequired,\n};\n\nconst VictoryPanel = (props) => {\n  const { onKeepPlayingClick, onNewGameClick } = props;\n\n  return (\n    <div className={styles.endGamePanel}>\n      <h1>YOU WIN!</h1>\n      <div>\n        <button type=\"button\" className={styles.panelBtn} onClick={onKeepPlayingClick}>\n            Keep Playing\n        </button>\n        <button type=\"button\" className={styles.panelBtn} onClick={onNewGameClick}>\n            Try Again\n        </button>\n      </div>\n    </div>\n  );\n};\nVictoryPanel.propTypes = {\n  onKeepPlayingClick: PropTypes.func.isRequired,\n  onNewGameClick: PropTypes.func.isRequired,\n};\n\nfunction EndGamePanel(props) {\n  const { onNewGameClick, onKeepPlayingClick, gameState } = props;\n  let content = null;\n\n  if (gameState === GAME_STATES.GAME_OVER) {\n    content = <GameOverPanel onNewGameClick={onNewGameClick} />;\n  } else if (gameState === GAME_STATES.VICTORY) {\n    content = (\n      <VictoryPanel onNewGameClick={onNewGameClick} onKeepPlayingClick={onKeepPlayingClick} />\n    );\n  }\n\n  return <div className={styles.container}>{content}</div>;\n}\n\nEndGamePanel.propTypes = propTypes;\nexport default EndGamePanel;\n","import React, { useCallback } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { newGame, keepPlaying } from '../../redux/actions/game';\nimport EndGamePanel from './EndGamePanel';\n\nfunction EndGamePanelContainer() {\n  const dispatch = useDispatch();\n  const gameState = useSelector((state) => state.game.gameState);\n\n  const handleNewGameClick = useCallback(() => {\n    dispatch(newGame());\n  }, [dispatch]);\n\n  const handleKeepPlayingClick = useCallback(() => {\n    dispatch(keepPlaying());\n  }, [dispatch]);\n\n  return (\n    <EndGamePanel\n      gameState={gameState}\n      onNewGameClick={handleNewGameClick}\n      onKeepPlayingClick={handleKeepPlayingClick}\n    />\n  );\n}\n\nexport default EndGamePanelContainer;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M409.132,114.573c-19.608-33.596-46.205-60.194-79.798-79.8C295.736,15.166,259.057,5.365,219.271,5.365 c-39.781,0-76.472,9.804-110.063,29.408c-33.596,19.605-60.192,46.204-79.8,79.8C9.803,148.168,0,184.854,0,224.63 c0,47.78,13.94,90.745,41.827,128.906c27.884,38.164,63.906,64.572,108.063,79.227c5.14,0.954,8.945,0.283,11.419-1.996 c2.475-2.282,3.711-5.14,3.711-8.562c0-0.571-0.049-5.708-0.144-15.417c-0.098-9.709-0.144-18.179-0.144-25.406l-6.567,1.136 c-4.187,0.767-9.469,1.092-15.846,1c-6.374-0.089-12.991-0.757-19.842-1.999c-6.854-1.231-13.229-4.086-19.13-8.559 c-5.898-4.473-10.085-10.328-12.56-17.556l-2.855-6.57c-1.903-4.374-4.899-9.233-8.992-14.559 c-4.093-5.331-8.232-8.945-12.419-10.848l-1.999-1.431c-1.332-0.951-2.568-2.098-3.711-3.429c-1.142-1.331-1.997-2.663-2.568-3.997 c-0.572-1.335-0.098-2.43,1.427-3.289c1.525-0.859,4.281-1.276,8.28-1.276l5.708,0.853c3.807,0.763,8.516,3.042,14.133,6.851 c5.614,3.806,10.229,8.754,13.846,14.842c4.38,7.806,9.657,13.754,15.846,17.847c6.184,4.093,12.419,6.136,18.699,6.136 c6.28,0,11.704-0.476,16.274-1.423c4.565-0.952,8.848-2.383,12.847-4.285c1.713-12.758,6.377-22.559,13.988-29.41 c-10.848-1.14-20.601-2.857-29.264-5.14c-8.658-2.286-17.605-5.996-26.835-11.14c-9.235-5.137-16.896-11.516-22.985-19.126 c-6.09-7.614-11.088-17.61-14.987-29.979c-3.901-12.374-5.852-26.648-5.852-42.826c0-23.035,7.52-42.637,22.557-58.817 c-7.044-17.318-6.379-36.732,1.997-58.24c5.52-1.715,13.706-0.428,24.554,3.853c10.85,4.283,18.794,7.952,23.84,10.994 c5.046,3.041,9.089,5.618,12.135,7.708c17.705-4.947,35.976-7.421,54.818-7.421s37.117,2.474,54.823,7.421l10.849-6.849 c7.419-4.57,16.18-8.758,26.262-12.565c10.088-3.805,17.802-4.853,23.134-3.138c8.562,21.509,9.325,40.922,2.279,58.24 c15.036,16.18,22.559,35.787,22.559,58.817c0,16.178-1.958,30.497-5.853,42.966c-3.9,12.471-8.941,22.457-15.125,29.979 c-6.191,7.521-13.901,13.85-23.131,18.986c-9.232,5.14-18.182,8.85-26.84,11.136c-8.662,2.286-18.415,4.004-29.263,5.146 c9.894,8.562,14.842,22.077,14.842,40.539v60.237c0,3.422,1.19,6.279,3.572,8.562c2.379,2.279,6.136,2.95,11.276,1.995 c44.163-14.653,80.185-41.062,108.068-79.226c27.88-38.161,41.825-81.126,41.825-128.906 C438.536,184.851,428.728,148.168,409.132,114.573z\"\n}));\n\nvar SvgGithub = function SvgGithub(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"438.549px\",\n    height: \"438.549px\",\n    viewBox: \"0 0 438.549 438.549\",\n    style: {\n      enableBackground: \"new 0 0 438.549 438.549\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgGithub, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/github.1229267e.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Header from '../../components/header';\nimport Board from '../../components/board';\nimport EndGamePanel from '../../components/end-game-panel';\nimport { GAME_STATES } from '../../constants';\nimport { ReactComponent as GithubLogo } from '../../assets/github.svg';\nimport styles from './Game.module.css';\n\nconst propTypes = {\n  gameState: PropTypes.string.isRequired,\n};\n\nfunction Game(props) {\n  const showEndGamePanel = props.gameState !== GAME_STATES.PLAYING;\n\n  return (\n    <div className={styles.container}>\n      <Header />\n\n      <div className={styles.positionRelative}>\n        <Board />\n        {showEndGamePanel && <EndGamePanel />}\n      </div>\n\n      <p className={styles.howToPlayText}>\n        <span className={styles.boldText}>HOW TO PLAY</span>\n: Use your arrow keys or swipe to move the tiles. When two\n        tiles with the same number touch, they merge into one!\n      </p>\n\n      <div>\n        <a href=\"https://github.com/rbika/2048\" className={styles.viewOnGithubLink} target=\"_blank\">\n          <GithubLogo className={styles.githubLogo} />\n          View on Github\n        </a>\n      </div>\n    </div>\n  );\n}\n\nGame.propTypes = propTypes;\nexport default Game;\n","import React, { useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Swipeable } from 'react-swipeable';\n\nimport { newGame } from '../../redux/actions/game';\nimport { moveTiles } from '../../redux/actions/tiles';\nimport { DIRECTIONS } from '../../constants';\nimport Game from './Game';\n\nfunction GameContainer() {\n  const gameState = useSelector((state) => state.game.gameState);\n  const dispatch = useDispatch();\n\n  // Starts a new game\n  useEffect(() => {\n    dispatch(newGame());\n  }, []);\n\n  const handleSwipe = (e) => {\n    const direction = DIRECTIONS[e.dir.toUpperCase()];\n\n    if (direction) {\n      dispatch(moveTiles(direction));\n    }\n  };\n\n  return (\n    <Swipeable onSwiped={handleSwipe}>\n      <Game gameState={gameState} />\n    </Swipeable>\n  );\n}\n\nexport default GameContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport Game from './pages/game';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Game />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__27QFJ\",\"titleContainer\":\"Header_titleContainer__53BfW\",\"title\":\"Header_title__3_fub\",\"subTitle\":\"Header_subTitle__10-eU\",\"gameInfo\":\"Header_gameInfo__3aUvJ\",\"scoresContainer\":\"Header_scoresContainer__N5WX-\",\"scoreContainer\":\"Header_scoreContainer__3bq5H\",\"scoreLabel\":\"Header_scoreLabel__3uraT\",\"scoreValue\":\"Header_scoreValue__2HLNR\",\"undoBtn\":\"Header_undoBtn__25oAM\",\"newGameBtn\":\"Header_newGameBtn__1c5MY\"};"],"sourceRoot":""}