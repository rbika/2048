{"version":3,"sources":["components/header/Header.module.css","constants.js","components/header/Header.view.js","utils/grid.js","contexts/GameContext.js","components/header/Header.container.js","components/header/index.js","components/board/Board.view.js","components/board/index.js","components/board/Board.container.js","components/end-game-panel/EndGamePanel.view.js","components/end-game-panel/EndGamePanel.container.js","components/end-game-panel/index.js","assets/github.svg","pages/game/Game.view.js","pages/game/Game.container.js","pages/game/index.js","index.js","components/board/Board.module.css","components/end-game-panel/EndGamePanel.module.css","pages/game/Game.module.css"],"names":["module","exports","GAME_STATES","IN_PROGRESS","VICTORY","GAME_OVER","ENDLESS_MODE","DIRECTIONS","UP","LEFT","DOWN","RIGHT","ARROWS","38","37","40","39","HeaderView","props","score","bestScore","onNewGameClick","className","styles","container","titleContainer","title","subTitle","gameInfo","scoresContainer","scoreContainer","scoreLabel","scoreValue","buttonsContainer","type","newGameBtn","onClick","VECTOR","row","col","TILE_ORIGINS","generateEmptyGrid","gridSize","grid","i","Array","fill","push","isValidMove","nextPos","tileValue","isInsideRow","length","isInsideCol","nextCell","emptyCell","sameValueCell","value","unmergedCell","mergeWithTile","moveTiles","direction","newGrid","vector","gridChanged","j","tile","movedTile","newMerged","newRandom","hasAvailableMoves","flatGrid","flat","some","cell","result","forEach","generateTile","origin","id","uuid","getRandomEmptyCell","emptyCells","getEmptyCells","Math","floor","random","mergeTiles","map","gridRow","hasVictoryTile","filter","calculateMoveScore","reduce","GameContext","React","createContext","addRandomTile","gridUtils","randomValue","sleep","ms","Promise","res","setTimeout","initialState","gameState","currentScore","tilesMoving","reducer","state","action","payload","GameContextProvider","useReducer","dispatch","children","newGame","useCallback","savedBestScore","localStorage","getItem","parseInt","directions","a","max","setItem","endlessMode","Provider","HeaderContainer","useContext","BoardGrid","cells","GRID_SIZE","key","boardGridCell","boardGrid","Tiles","tiles","tilesContainer","positionStyles","transform","transition","MOVE_ANIMATION","classes","classNames","newRandomTile","newMergedTile","tileContainer","style","BoardView","boardContainer","BoardContainer","array","sort","tile1","tile2","parseGrid","useEffect","window","addEventListener","handleKeyPress","removeEventListener","e","keyCode","GameOverPanel","endGamePanel","panelBtn","VictoryPanel","onKeepPlayingClick","EndGamePanelView","content","EndGamePanelContainer","EndGamePanel","handleNewGameClick","handleKeepPlayingClick","_extends","Object","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","_ref","svgRef","x","y","width","height","viewBox","enableBackground","xmlSpace","ref","ForwardRef","forwardRef","GameView","showEndGamePanel","PLAYING","positionRelative","howToPlayText","boldText","href","viewOnGithubLink","rel","githubLogo","GameContainer","onSwiped","dir","toUpperCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad97fd2d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__27QFJ\",\"titleContainer\":\"Header_titleContainer__53BfW\",\"title\":\"Header_title__3_fub\",\"subTitle\":\"Header_subTitle__10-eU\",\"gameInfo\":\"Header_gameInfo__3aUvJ\",\"scoresContainer\":\"Header_scoresContainer__N5WX-\",\"scoreContainer\":\"Header_scoreContainer__3bq5H\",\"scoreLabel\":\"Header_scoreLabel__3uraT\",\"scoreValue\":\"Header_scoreValue__2HLNR\",\"undoBtn\":\"Header_undoBtn__25oAM\",\"newGameBtn\":\"Header_newGameBtn__1c5MY\"};","// Tile needed to win the game\nexport const VICTORY_TILE = 2048;\n\n// Duration of the movement animation (in miliseconds)\nexport const MOVE_ANIMATION = 150;\n\n// Game states\nexport const GAME_STATES = {\n  IN_PROGRESS: 'IN_PROGRESS',\n  VICTORY: 'VICTORY',\n  GAME_OVER: 'GAME_OVER',\n  ENDLESS_MODE: 'ENDLESS_MODE',\n};\n\n// Board grid size\nexport const GRID_SIZE = 4;\n\n// Directions\nexport const DIRECTIONS = {\n  UP: 'UP',\n  LEFT: 'LEFT',\n  DOWN: 'DOWN',\n  RIGHT: 'RIGHT',\n};\n\n// Keyboard arrows codes\nexport const ARROWS = {\n  38: DIRECTIONS.UP,\n  37: DIRECTIONS.LEFT,\n  40: DIRECTIONS.DOWN,\n  39: DIRECTIONS.RIGHT,\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './Header.module.css';\n\nconst propTypes = {\n  score: PropTypes.number.isRequired,\n  bestScore: PropTypes.number.isRequired,\n  onNewGameClick: PropTypes.func.isRequired,\n};\n\nfunction HeaderView(props) {\n  const { score, bestScore, onNewGameClick } = props;\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.titleContainer}>\n        <h1 className={styles.title}>2048</h1>\n        <h2 className={styles.subTitle}>Join the numbers and get to the 2048 tile!</h2>\n      </div>\n\n      <div className={styles.gameInfo}>\n        <div className={styles.scoresContainer}>\n          <div className={styles.scoreContainer}>\n            <div className={styles.scoreLabel}>Score</div>\n            <div className={styles.scoreValue}>{score}</div>\n          </div>\n\n          <div className={styles.scoreContainer}>\n            <div className={styles.scoreLabel}>Best</div>\n            <div className={styles.scoreValue}>{bestScore}</div>\n          </div>\n        </div>\n\n        <div className={styles.buttonsContainer}>\n          <button type=\"button\" className={styles.newGameBtn} onClick={onNewGameClick}>\n            New Game\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nHeaderView.propTypes = propTypes;\nexport default HeaderView;\n","import uuid from 'uuid/v4';\n\nimport { DIRECTIONS, VICTORY_TILE } from '../constants';\n\n// Movement vector direction\nconst VECTOR = {\n  UP: { row: -1, col: 0 },\n  DOWN: { row: 1, col: 0 },\n  LEFT: { row: 0, col: -1 },\n  RIGHT: { row: 0, col: 1 },\n};\n\n// Actions that can generate a new tile\nexport const TILE_ORIGINS = {\n  MERGE: 'MERGE',\n  MOVE: 'MOVE',\n};\n\n/**\n * Generates a grid with empty cells\n *\n * @param {number} gridSize\n * @returns {number[][]}\n */\nexport const generateEmptyGrid = (gridSize) => {\n  const grid = [];\n\n  for (let i = 0; i < gridSize; i += 1) {\n    const row = Array(gridSize).fill(null);\n    grid.push(row);\n  }\n\n  return grid;\n};\n\n/**\n * Checks if the tile can be moved to the specified position\n *\n * @param {{row: number, col: number}} nextPos Coords of new position\n * @param {number[][]} grid Grid with the moved tiles\n * @param {string} tileValue Value of the tile being moved\n * @returns {number[][]}\n */\nexport const isValidMove = (nextPos, grid, tileValue) => {\n  const isInsideRow = nextPos.row >= 0 && nextPos.row < grid.length;\n  const isInsideCol = nextPos.col >= 0 && nextPos.col < grid.length;\n  const isInsideGrid = isInsideRow && isInsideCol;\n\n  if (!isInsideGrid) {\n    return false;\n  }\n\n  const nextCell = grid[nextPos.row][nextPos.col];\n  const emptyCell = nextCell === null;\n  const sameValueCell = nextCell && nextCell.value === tileValue;\n  const unmergedCell = nextCell && !nextCell.mergeWithTile;\n\n  return emptyCell || (sameValueCell && unmergedCell);\n};\n\n/**\n * Returns a grid with moved tiles\n *\n * @param {number[][]} grid\n * @param {string} direction\n * @returns {{newGrid: number[][], gridChanged: boolean}}\n */\nexport const moveTiles = (grid, direction) => {\n  const gridSize = grid.length;\n  const newGrid = generateEmptyGrid(gridSize);\n  const vector = VECTOR[direction];\n  let gridChanged = false;\n\n  for (let i = 0; i < gridSize; i += 1) {\n    for (let j = 0; j < gridSize; j += 1) {\n      let row = i;\n      let col = j;\n\n      // Reverse row iterate tiles from bottom to top\n      if (direction === DIRECTIONS.DOWN) row = gridSize - i - 1;\n\n      // Reverse col iterate tiles from right to left\n      if (direction === DIRECTIONS.RIGHT) col = gridSize - j - 1;\n\n      const tile = grid[row][col];\n\n      if (tile !== null) {\n        const movedTile = { ...tile };\n        const nextPos = {\n          row: tile.row + vector.row,\n          col: tile.col + vector.col,\n        };\n\n        movedTile.newMerged = false;\n        movedTile.newRandom = false;\n\n        while (isValidMove(nextPos, newGrid, movedTile.value)) {\n          movedTile.row = nextPos.row;\n          movedTile.col = nextPos.col;\n\n          nextPos.row += vector.row;\n          nextPos.col += vector.col;\n\n          if (movedTile.row !== tile.row || movedTile.col !== tile.col) {\n            gridChanged = true;\n          }\n        }\n\n        if (newGrid[movedTile.row][movedTile.col] !== null) {\n          newGrid[movedTile.row][movedTile.col].mergeWithTile = movedTile;\n        } else {\n          newGrid[movedTile.row][movedTile.col] = movedTile;\n        }\n      }\n    }\n  }\n  return { newGrid, gridChanged };\n};\n\n/**\n * Checks if there are available moves in the grid\n *\n * @param {number[][]} grid\n * @returns {boolean}\n */\nexport const hasAvailableMoves = (grid) => {\n  const flatGrid = grid.flat();\n  const gridSize = grid.length;\n\n  // Checks if there are any empty cell\n  if (flatGrid.some((cell) => cell === null)) {\n    return true;\n  }\n\n  // Checks if there are adjacent cells with the same value\n  let result = false;\n  flatGrid.forEach((tile) => {\n    const { row, col, value } = tile;\n\n    if (row + 1 < gridSize && grid[row + 1][col].value === value) {\n      result = true;\n    }\n\n    if (col + 1 < gridSize && grid[row][col + 1].value === value) {\n      result = true;\n    }\n  });\n\n  return result;\n};\n\n/**\n * Creates a tile object\n *\n * @param {number} row\n * @param {number} col\n * @param {number} value\n * @param {string} origin\n * @returns {Object}\n */\nexport const generateTile = (row, col, value, origin) => {\n  const newMerged = origin === TILE_ORIGINS.MERGE;\n  const newRandom = origin === TILE_ORIGINS.MOVE;\n\n  return {\n    id: uuid(),\n    value,\n    row,\n    col,\n    newRandom,\n    newMerged,\n    mergeWithTile: null,\n  };\n};\n\n/**\n * Creates a tile object with random value (2 or 4) and random position\n *\n * @param {number[][]} grid\n * @returns {Object}\n */\nexport const generateRandomTile = (grid) => {\n  const randomValue = Math.random() > 0.9 ? 4 : 2;\n  const { row, col } = getRandomEmptyCell(grid);\n  return generateTile(row, col, randomValue, TILE_ORIGINS.MOVE);\n};\n\n/**\n * Gets the coordinates of all empty cells in the grid\n *\n * @param {number[][]} grid\n * @returns {{row: number, col: number}[]}\n */\nexport const getEmptyCells = (grid) => {\n  const emptyCells = [];\n\n  grid.forEach((row, i) => {\n    row.forEach((cell, j) => {\n      if (!cell) {\n        emptyCells.push({ row: i, col: j });\n      }\n    });\n  });\n  return emptyCells;\n};\n\n/**\n * Gets the coordinates of a empty random cell in the grid\n *\n * @param {number[][]} grid\n * @returns {{row: number, col: number}}\n */\nexport const getRandomEmptyCell = (grid) => {\n  const emptyCells = getEmptyCells(grid);\n  return emptyCells[Math.floor(Math.random() * emptyCells.length)];\n};\n\n/**\n * Returns a grid with the new tile added\n *\n * @param {number[][]} grid\n * @param {Object} tile\n * @returns {number[][]}\n */\nexport const addTile = (grid, tile) => {\n  const updatedGrid = grid.map((row, i) => {\n    if (i !== tile.row) {\n      return row;\n    }\n    return row.map((col, j) => {\n      if (j !== tile.col) {\n        return col;\n      }\n      return tile;\n    });\n  });\n\n  return updatedGrid;\n};\n\n/**\n * Returns a grid with the new merged tiles\n *\n * @param {number[][]} grid\n * @returns {number[][]}\n */\nexport const mergeTiles = (grid) => {\n  const updatedGrid = grid.map((gridRow) => gridRow.map((tile) => {\n    if (tile && tile.mergeWithTile) {\n      const { row, col, value } = tile;\n      return generateTile(row, col, value * 2, TILE_ORIGINS.MERGE);\n    }\n    return tile;\n  }));\n\n  return updatedGrid;\n};\n\n/**\n * Checks if the victory tile is present in the grid\n *\n * @param {number[][]} grid\n * @returns {boolean}\n */\nexport const hasVictoryTile = (grid) => grid\n  .flat()\n  .filter((cell) => cell !== null)\n  .some((cell) => cell.value === VICTORY_TILE);\n\n/**\n * Calculates the score of the last move\n *\n * @param {number[][]} grid\n * @returns {number}\n */\nexport const calculateMoveScore = (grid) => {\n  const tiles = grid.flat().filter((cell) => cell !== null);\n  const reducer = (score, tile) => (tile.newMerged ? score + tile.value : score);\n  return tiles.reduce(reducer, 0);\n};\n","import React, { useReducer, useCallback } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport * as gridUtils from '../utils/grid';\nimport { GRID_SIZE, GAME_STATES, MOVE_ANIMATION } from '../constants';\n\nexport const GameContext = React.createContext();\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst addRandomTile = (grid) => {\n  const tile = gridUtils.generateRandomTile(grid);\n  return gridUtils.addTile(grid, tile);\n};\n\nconst sleep = (ms) => new Promise((res) => setTimeout(res, ms));\n\n/**\n * Actions\n */\n\nconst NEW_GAME = '2048/newGame';\nconst GAME_OVER = '2048/gameOver';\nconst VICTORY = '2048/victory';\nconst ENDLESS_MODE = '2048/endlessMode';\nconst MOVE_TILES = '2048/moveTiles';\nconst MOVE_TILES_END = '2048/moveTilesEnd';\n\n/**\n * Reducer\n */\n\nconst initialState = {\n  gameState: GAME_STATES.IN_PROGRESS,\n  currentScore: 0,\n  bestScore: 0,\n  grid: [],\n  tilesMoving: false,\n};\n\nconst reducer = (state, action) => {\n  if (action.type === NEW_GAME) {\n    const { grid, bestScore } = action.payload;\n\n    return {\n      ...state,\n      grid,\n      bestScore,\n      currentScore: 0,\n      gameState: GAME_STATES.IN_PROGRESS,\n    };\n  }\n\n  if (action.type === GAME_OVER) {\n    const { bestScore } = action.payload;\n\n    return {\n      ...state,\n      bestScore,\n      gameState: GAME_STATES.GAME_OVER,\n    };\n  }\n\n  if (action.type === VICTORY) {\n    const { bestScore } = action.payload;\n\n    return {\n      ...state,\n      bestScore,\n      gameState: GAME_STATES.VICTORY,\n    };\n  }\n\n  if (action.type === ENDLESS_MODE) {\n    return {\n      ...state,\n      gameState: GAME_STATES.ENDLESS_MODE,\n    };\n  }\n\n  if (action.type === MOVE_TILES) {\n    const { newGrid } = action.payload;\n\n    return {\n      ...state,\n      grid: newGrid,\n    };\n  }\n\n  if (action.type === MOVE_TILES_END) {\n    const { grid, score } = action.payload;\n\n    return {\n      ...state,\n      grid,\n      currentScore: score,\n    };\n  }\n\n  return state;\n};\n\n/**\n * Context Provider\n */\n\nconst GameContextProvider = (props) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { children } = props;\n\n  const newGame = useCallback(() => {\n    let grid;\n    grid = gridUtils.generateEmptyGrid(GRID_SIZE);\n    grid = addRandomTile(grid);\n    grid = addRandomTile(grid);\n\n    const savedBestScore = localStorage.getItem('bestScore');\n    const bestScore = savedBestScore ? parseInt(savedBestScore, 10) : 0;\n\n    dispatch({\n      type: NEW_GAME,\n      payload: { grid, bestScore },\n    });\n  }, [dispatch]);\n\n  const moveTiles = useCallback(async (directions) => {\n    const { newGrid, gridChanged } = gridUtils.moveTiles(state.grid, directions);\n\n    if (!gridChanged) return;\n\n    dispatch({\n      type: MOVE_TILES,\n      payload: { newGrid },\n    });\n\n    await sleep(MOVE_ANIMATION);\n\n    let grid = gridUtils.mergeTiles(newGrid);\n    const score = state.currentScore + gridUtils.calculateMoveScore(grid);\n\n    if (grid.flat().some((value) => value === null)) {\n      grid = addRandomTile(grid);\n    }\n\n    dispatch({\n      type: MOVE_TILES_END,\n      payload: { grid, score },\n    });\n\n    if (state.gameState !== GAME_STATES.ENDLESS_MODE) {\n      if (gridUtils.hasVictoryTile(grid)) {\n        const bestScore = Math.max(score, state.bestScore);\n        localStorage.setItem('bestScore', bestScore);\n\n        dispatch({\n          type: VICTORY,\n          payload: { bestScore },\n        });\n      }\n    }\n\n    if (!gridUtils.hasAvailableMoves(grid)) {\n      const bestScore = Math.max(score, state.bestScore);\n      localStorage.setItem('bestScore', bestScore);\n\n      dispatch({\n        type: GAME_OVER,\n        payload: { bestScore },\n      });\n    }\n  }, [state, dispatch]);\n\n  const endlessMode = useCallback(() => {\n    dispatch({\n      type: ENDLESS_MODE,\n    });\n  }, [dispatch]);\n\n  return (\n    <GameContext.Provider\n      value={{\n        state,\n        newGame,\n        moveTiles,\n        endlessMode,\n      }}\n    >\n      {children}\n    </GameContext.Provider>\n  );\n};\n\nGameContextProvider.propTypes = propTypes;\nexport default GameContextProvider;\n","import React, { useContext } from 'react';\n\nimport HeaderView from './Header.view';\nimport { GameContext } from '../../contexts/GameContext';\n\nfunction HeaderContainer() {\n  const { state, newGame } = useContext(GameContext);\n\n  return (\n    <HeaderView\n      score={state.currentScore}\n      bestScore={state.bestScore}\n      onNewGameClick={newGame}\n    />\n  );\n}\n\nexport default HeaderContainer;\n","import HeaderContainer from './Header.container';\n\nexport default HeaderContainer;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { GRID_SIZE, MOVE_ANIMATION } from '../../constants';\nimport styles from './Board.module.css';\n\nconst propTypes = {\n  tiles: PropTypes.arrayOf(PropTypes.shape({\n    grid: PropTypes.array,\n    tilesMoving: PropTypes.bool,\n  })).isRequired,\n};\n\nconst BoardGrid = () => {\n  const cells = [];\n\n  for (let i = 0; i < GRID_SIZE * GRID_SIZE; i += 1) {\n    cells.push(<div key={i} className={styles.boardGridCell} />);\n  }\n  return <div className={styles.boardGrid}>{cells}</div>;\n};\n\nconst Tiles = (props) => {\n  const { tiles } = props;\n\n  return (\n    <div className={styles.tilesContainer}>\n      {tiles.map((tile) => {\n        const positionStyles = {\n          transform: `translate(${tile.col * (75 + 10)}px, ${tile.row * (75 + 10)}px)`,\n          transition: `all ${MOVE_ANIMATION / 1000}s ease`,\n        };\n\n        const classes = classNames(styles.tile, {\n          [styles.newRandomTile]: tile.newRandom,\n          [styles.newMergedTile]: tile.newMerged,\n          [styles[`tile-${tile.value}`]]: true,\n        });\n\n        return (\n          <div key={tile.id} className={styles.tileContainer} style={positionStyles}>\n            <div className={classes}>{tile.value}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nTiles.propTypes = propTypes;\n\nfunction BoardView(props) {\n  const { tiles } = props;\n\n  return (\n    <div className={styles.boardContainer}>\n      <BoardGrid />\n      <Tiles tiles={tiles} />\n    </div>\n  );\n}\n\nBoardView.propTypes = propTypes;\nexport default BoardView;\n","import BoardContainer from './Board.container';\n\nexport default BoardContainer;\n","import React, { useEffect, useContext } from 'react';\n\nimport BoardView from './Board.view';\nimport { ARROWS } from '../../constants';\nimport { GameContext } from '../../contexts/GameContext';\n\nconst parseGrid = (grid) => {\n  const array = [];\n  grid.flat().forEach((tile) => {\n    if (tile) {\n      array.push(tile);\n\n      if (tile.mergeWithTile) {\n        array.push(tile.mergeWithTile);\n      }\n    }\n  });\n\n  return array.sort((tile1, tile2) => (tile1.id > tile2.id ? 1 : -1));\n};\n\nconst BoardContainer = () => {\n  const { state, moveTiles } = useContext(GameContext);\n  const tiles = parseGrid(state.grid);\n\n  // Add keypress event listener\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyPress);\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n    };\n  });\n\n  const handleKeyPress = (e) => {\n    const direction = ARROWS[e.keyCode];\n\n    if (direction && !state.tilesMoving) {\n      moveTiles(direction);\n    }\n  };\n\n  return <BoardView tiles={tiles} />;\n};\n\nexport default BoardContainer;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { GAME_STATES } from '../../constants';\nimport styles from './EndGamePanel.module.css';\n\nconst propTypes = {\n  gameState: PropTypes.string.isRequired,\n  onNewGameClick: PropTypes.func.isRequired,\n  onKeepPlayingClick: PropTypes.func.isRequired,\n};\n\nconst GameOverPanel = (props) => {\n  const { onNewGameClick } = props;\n\n  return (\n    <div className={styles.endGamePanel}>\n      <h1>GAME OVER!</h1>\n      <button type=\"button\" className={styles.panelBtn} onClick={onNewGameClick}>\n        Try Again\n      </button>\n    </div>\n  );\n};\nGameOverPanel.propTypes = {\n  onNewGameClick: PropTypes.func.isRequired,\n};\n\nconst VictoryPanel = (props) => {\n  const { onKeepPlayingClick, onNewGameClick } = props;\n\n  return (\n    <div className={styles.endGamePanel}>\n      <h1>YOU WIN!</h1>\n      <div>\n        <button type=\"button\" className={styles.panelBtn} onClick={onKeepPlayingClick}>\n          Keep Playing\n        </button>\n        <button type=\"button\" className={styles.panelBtn} onClick={onNewGameClick}>\n          Try Again\n        </button>\n      </div>\n    </div>\n  );\n};\nVictoryPanel.propTypes = {\n  onKeepPlayingClick: PropTypes.func.isRequired,\n  onNewGameClick: PropTypes.func.isRequired,\n};\n\nfunction EndGamePanelView(props) {\n  const { onNewGameClick, onKeepPlayingClick, gameState } = props;\n  let content = null;\n\n  if (gameState === GAME_STATES.GAME_OVER) {\n    content = <GameOverPanel onNewGameClick={onNewGameClick} />;\n  } else if (gameState === GAME_STATES.VICTORY) {\n    content = (\n      <VictoryPanel onNewGameClick={onNewGameClick} onKeepPlayingClick={onKeepPlayingClick} />\n    );\n  }\n\n  return <div className={styles.container}>{content}</div>;\n}\n\nEndGamePanelView.propTypes = propTypes;\nexport default EndGamePanelView;\n","import React, { useCallback, useContext } from 'react';\n\nimport EndGamePanelView from './EndGamePanel.view';\nimport { GameContext } from '../../contexts/GameContext';\n\nfunction EndGamePanelContainer() {\n  const { state, newGame, endlessMode } = useContext(GameContext);\n\n  const handleNewGameClick = useCallback(() => {\n    newGame();\n  }, [newGame]);\n\n  const handleKeepPlayingClick = useCallback(() => {\n    endlessMode();\n  }, [endlessMode]);\n\n  return (\n    <EndGamePanelView\n      gameState={state.gameState}\n      onNewGameClick={handleNewGameClick}\n      onKeepPlayingClick={handleKeepPlayingClick}\n    />\n  );\n}\n\nexport default EndGamePanelContainer;\n","import EndGamePanel from './EndGamePanel.container';\n\nexport default EndGamePanel;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M409.132,114.573c-19.608-33.596-46.205-60.194-79.798-79.8C295.736,15.166,259.057,5.365,219.271,5.365 c-39.781,0-76.472,9.804-110.063,29.408c-33.596,19.605-60.192,46.204-79.8,79.8C9.803,148.168,0,184.854,0,224.63 c0,47.78,13.94,90.745,41.827,128.906c27.884,38.164,63.906,64.572,108.063,79.227c5.14,0.954,8.945,0.283,11.419-1.996 c2.475-2.282,3.711-5.14,3.711-8.562c0-0.571-0.049-5.708-0.144-15.417c-0.098-9.709-0.144-18.179-0.144-25.406l-6.567,1.136 c-4.187,0.767-9.469,1.092-15.846,1c-6.374-0.089-12.991-0.757-19.842-1.999c-6.854-1.231-13.229-4.086-19.13-8.559 c-5.898-4.473-10.085-10.328-12.56-17.556l-2.855-6.57c-1.903-4.374-4.899-9.233-8.992-14.559 c-4.093-5.331-8.232-8.945-12.419-10.848l-1.999-1.431c-1.332-0.951-2.568-2.098-3.711-3.429c-1.142-1.331-1.997-2.663-2.568-3.997 c-0.572-1.335-0.098-2.43,1.427-3.289c1.525-0.859,4.281-1.276,8.28-1.276l5.708,0.853c3.807,0.763,8.516,3.042,14.133,6.851 c5.614,3.806,10.229,8.754,13.846,14.842c4.38,7.806,9.657,13.754,15.846,17.847c6.184,4.093,12.419,6.136,18.699,6.136 c6.28,0,11.704-0.476,16.274-1.423c4.565-0.952,8.848-2.383,12.847-4.285c1.713-12.758,6.377-22.559,13.988-29.41 c-10.848-1.14-20.601-2.857-29.264-5.14c-8.658-2.286-17.605-5.996-26.835-11.14c-9.235-5.137-16.896-11.516-22.985-19.126 c-6.09-7.614-11.088-17.61-14.987-29.979c-3.901-12.374-5.852-26.648-5.852-42.826c0-23.035,7.52-42.637,22.557-58.817 c-7.044-17.318-6.379-36.732,1.997-58.24c5.52-1.715,13.706-0.428,24.554,3.853c10.85,4.283,18.794,7.952,23.84,10.994 c5.046,3.041,9.089,5.618,12.135,7.708c17.705-4.947,35.976-7.421,54.818-7.421s37.117,2.474,54.823,7.421l10.849-6.849 c7.419-4.57,16.18-8.758,26.262-12.565c10.088-3.805,17.802-4.853,23.134-3.138c8.562,21.509,9.325,40.922,2.279,58.24 c15.036,16.18,22.559,35.787,22.559,58.817c0,16.178-1.958,30.497-5.853,42.966c-3.9,12.471-8.941,22.457-15.125,29.979 c-6.191,7.521-13.901,13.85-23.131,18.986c-9.232,5.14-18.182,8.85-26.84,11.136c-8.662,2.286-18.415,4.004-29.263,5.146 c9.894,8.562,14.842,22.077,14.842,40.539v60.237c0,3.422,1.19,6.279,3.572,8.562c2.379,2.279,6.136,2.95,11.276,1.995 c44.163-14.653,80.185-41.062,108.068-79.226c27.88-38.161,41.825-81.126,41.825-128.906 C438.536,184.851,428.728,148.168,409.132,114.573z\"\n}));\n\nvar SvgGithub = function SvgGithub(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"438.549px\",\n    height: \"438.549px\",\n    viewBox: \"0 0 438.549 438.549\",\n    style: {\n      enableBackground: \"new 0 0 438.549 438.549\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgGithub, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/github.1229267e.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Header from '../../components/header';\nimport Board from '../../components/board';\nimport EndGamePanel from '../../components/end-game-panel';\nimport { GAME_STATES } from '../../constants';\nimport { ReactComponent as GithubLogo } from '../../assets/github.svg';\nimport styles from './Game.module.css';\n\nconst propTypes = {\n  gameState: PropTypes.string.isRequired,\n};\n\nfunction GameView(props) {\n  const { gameState } = props;\n  const showEndGamePanel = gameState !== GAME_STATES.PLAYING;\n\n  return (\n    <div className={styles.container}>\n      <Header />\n\n      <div className={styles.positionRelative}>\n        <Board />\n        {showEndGamePanel && <EndGamePanel />}\n      </div>\n\n      <p className={styles.howToPlayText}>\n        <span className={styles.boldText}>HOW TO PLAY: </span>\n        Use your arrow keys or swipe to move the tiles. When two\n        tiles with the same number touch, they merge into one!\n      </p>\n\n      <div>\n        <a href=\"https://github.com/rbika/2048\" className={styles.viewOnGithubLink} target=\"_blank\" rel=\"noopener noreferrer\">\n          <GithubLogo className={styles.githubLogo} />\n          View on Github\n        </a>\n      </div>\n    </div>\n  );\n}\n\nGameView.propTypes = propTypes;\nexport default GameView;\n","import React, { useEffect, useContext } from 'react';\n\nimport { Swipeable } from 'react-swipeable';\n\nimport { DIRECTIONS } from '../../constants';\nimport GameView from './Game.view';\nimport { GameContext } from '../../contexts/GameContext';\n\nfunction GameContainer() {\n  const { state, newGame, moveTiles } = useContext(GameContext);\n\n  // Starts a new game\n  useEffect(() => {\n    newGame();\n  }, [newGame]);\n\n  const handleSwipe = (e) => {\n    const direction = DIRECTIONS[e.dir.toUpperCase()];\n\n    if (direction) {\n      moveTiles(direction);\n    }\n  };\n\n  return (\n    <Swipeable onSwiped={handleSwipe}>\n      <GameView gameState={state.gameState} />\n    </Swipeable>\n  );\n}\n\nexport default GameContainer;\n","import GameContainer from './Game.container';\n\nexport default GameContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Game from './pages/game';\nimport GameContextProvider from './contexts/GameContext';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GameContextProvider>\n      <Game />\n    </GameContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boardContainer\":\"Board_boardContainer__1LEFg\",\"boardGrid\":\"Board_boardGrid__30AAE\",\"boardGridCell\":\"Board_boardGridCell__2cENT\",\"tilesContainer\":\"Board_tilesContainer__3TIBn\",\"tileContainer\":\"Board_tileContainer__3YcLx\",\"tile\":\"Board_tile__36kz5\",\"newRandomTile\":\"Board_newRandomTile__3aOcI\",\"newRandomTileAnimation\":\"Board_newRandomTileAnimation__1eu4J\",\"newMergedTile\":\"Board_newMergedTile__2fYCj\",\"newMergedTileAnimation\":\"Board_newMergedTileAnimation__1FEAj\",\"tile-2\":\"Board_tile-2__1868c\",\"tile-4\":\"Board_tile-4__2ZMie\",\"tile-8\":\"Board_tile-8__TQ_WY\",\"tile-16\":\"Board_tile-16__h7mTZ\",\"tile-32\":\"Board_tile-32__3Ge3d\",\"tile-64\":\"Board_tile-64__1QBuo\",\"tile-128\":\"Board_tile-128__fVeou\",\"tile-256\":\"Board_tile-256__1HYOa\",\"tile-512\":\"Board_tile-512__1YoSF\",\"tile-1024\":\"Board_tile-1024__3qOp-\",\"tile-2048\":\"Board_tile-2048__3LhJo\",\"tile-4096\":\"Board_tile-4096__3irdB\",\"tile-8192\":\"Board_tile-8192__273NZ\",\"tile-16384\":\"Board_tile-16384__1GhCe\",\"tile-32768\":\"Board_tile-32768__39-EQ\",\"tile-65536\":\"Board_tile-65536__YuCUh\",\"tile-131072\":\"Board_tile-131072__3ScEQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EndGamePanel_container__F2q-c\",\"endGamePanel\":\"EndGamePanel_endGamePanel__1vMAp\",\"fadeInAnimation\":\"EndGamePanel_fadeInAnimation__3GGIs\",\"panelBtn\":\"EndGamePanel_panelBtn__PTD2G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Game_container__39SqM\",\"howToPlayText\":\"Game_howToPlayText__6SN9W\",\"viewOnGithubLink\":\"Game_viewOnGithubLink__2drxN\",\"githubLogo\":\"Game_githubLogo__1gF9j\",\"positionRelative\":\"Game_positionRelative__29WxI\",\"boldText\":\"Game_boldText__1PbJY\"};"],"sourceRoot":""}